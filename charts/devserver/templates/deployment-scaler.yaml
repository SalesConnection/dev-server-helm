{{- range .Values.users }}
{{- if .autoOn }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "devserver.fullname" $ }}-{{ .name }}-on
spec:
  schedule: "30 0 * * 1-5"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: kubectl-scaler
          restartPolicy: OnFailure
          containers:
          - name: kubectl-scaler
            image: bitnami/kubectl:1.25.11
            command: ["/bin/sh", "-c"]
            args:
            - kubectl scale deployment -n {{ $.Release.Namespace }} {{ include "devserver.fullname" $ }}-{{ .name }} --replicas=1
{{- end }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "devserver.fullname" $ }}-{{ .name }}-off
spec:
  schedule: "00 11 * * 1-5"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: kubectl-scaler
          restartPolicy: OnFailure
          containers:
          - name: kubectl-scaler
            image: bitnami/kubectl:1.25.11
            command: ["/bin/sh", "-c"]
            args:
            - kubectl scale deployment -n {{ $.Release.Namespace }} {{ include "devserver.fullname" $ }}-{{ .name }} --replicas=0
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl-scaler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubectl-scaler
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubectl-scaler
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubectl-scaler
subjects:
- kind: ServiceAccount
  name: kubectl-scaler