{{- range .Values.users }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devserver.fullname" $ }}-{{ .name }}
  labels:
    {{- include "devserver.labels" $ | nindent 4 }}
    app: devserver-{{ .name }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "devserver.selectorLabels" $ | nindent 6 }}
      app: devserver-{{ .name }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "devserver.selectorLabels" $ | nindent 8 }}
        app: devserver-{{ .name }}
        service: devserver
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .serviceAccount | default $.Values.serviceAccount.name }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ .name }}-public-key
          configMap:
            name: {{ .name }}-public-key
        - name: default-files
          configMap:
            name: default-files
            defaultMode: 0777
        - name: data
          persistentVolumeClaim:
            claimName: {{ .name }}-ebs
        - name: nginx
          configMap:
            name: default-files
            items:
              - key: nginx.conf
                path: nginx.conf
      initContainers:
        - name: init-public-key
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              /var/default_files/init-{{ .name }}.sh
          volumeMounts:
            - name: {{ .name }}-public-key
              mountPath: /var/keys/
            - name: default-files
              mountPath: /var/default_files/
            - name: data
              mountPath: /root
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          # image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          image: "{{ if .image }}{{ .image.repository | default $.Values.image.repository }}:{{ .image.tag | default $.Values.image.tag | default $.Chart.AppVersion }}{{ else }}{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}{{ end }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 22
              protocol: TCP
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /root
            # - name: nginx
            #   mountPath: /etc/nginx/nginx.conf
            #   subPath: nginx.conf
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      topologySpreadConstraints:
        - maxSkew: {{ $.Values.topologySpread.maxSkew | default 2 }}
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              service: devserver
---
{{- end }}